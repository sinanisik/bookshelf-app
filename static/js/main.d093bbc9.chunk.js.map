{"version":3,"sources":["components/Homepage/FilterSortBarStyles.module.css","components/Header/NavigationBar/HeaderStyles.js","constants/navigation.js","components/Header/NavigationBar/NavigationBar.js","components/Header/index.js","components/Header/Header.js","constants/constants.js","state/ducks/books/reducers.js","state/ducks/books/selectors.js","state/ducks/books/index.js","state/ducks/books/types.js","containers/Homepage/Homepage.js","state/ducks/books/actions.js","containers/Homepage/index.js","containers/AddBook/AddBook.js","constants/routes.js","containers/AddBook/index.js","components/Main/index.js","components/Main/Main.js","components/AddBook/AddBookForm.js","components/AddBook/index.js","components/MainLayout/index.js","components/MainLayout/MainLayout.js","components/Homepage/FilterSortBarStyles.js","components/Homepage/FilterSortBar.js","components/Homepage/BookStyles.js","components/Homepage/Book.js","components/Homepage/Books.js","App.js","serviceWorker.js","state/store.js","constants/history.js","index.js","components/AddBook/AddBookForm.module.css"],"names":["module","exports","StyledNavItem","styled","NavItem","StyledNavbarText","NavbarText","navigation","left","title","to","right","Header","useState","isOpen","setIsOpen","Navbar","color","dark","expand","NavbarBrand","tag","Link","NavbarToggler","onClick","Collapse","navbar","Nav","className","map","nav","NavLink","NavigationBar","categories","ratings","statuses","apiHost","initialState","data","loading","filter","searchTerm","searchType","sortTerm","view","filteredBooksSelector","state","filteredBooks","book","category","toLowerCase","indexOf","author","sort","book1","book2","parseInt","split","reducer","action","type","payload","id","mapDispatchToProps","getBooks","dispatch","axios","get","then","result","catch","err","console","log","Homepage","connect","books","props","useEffect","length","items","componentProps","isReadBooks","readBooks","status","Container","AddBook","setBook","routerProps","match","params","isEdit","Row","Col","xs","routes","path","exact","component","Main","route","Comp","validationSchema","Yup","shape","required","review","min","imageUrl","url","addBook","values","history","post","push","updateBook","put","removeBook","delete","AddBookForm","withRouter","initialValues","description","rating","link","onSubmit","enableReinitialize","errors","handleChange","touched","handleSubmit","handleBlur","isSubmitting","Form","FormGroup","Label","for","Input","name","placeholder","value","onChange","invalid","FormFeedback","score","FormText","size","offset","Button","classes","button","MainLayout","this","document","Children","children","Component","active","StyledInputGroup","InputGroup","ButtonDropdown","changeFilter","search","searchValues","setViewOption","activeFilter","dropdownOpen","setDropdownOpen","views","selectedView","setSelectedView","setSearchValues","setView","fluid","style","padding","InputGroupButtonDropdown","addonType","toggle","DropdownToggle","caret","DropdownMenu","DropdownItem","e","target","divider","StyledBookCard","Card","StyledCardText","CardText","Book","popoverOpen","setPopoverOpen","CardImg","top","width","src","alt","CardBody","Popover","placement","PopoverBody","CardLink","href","Books","item","App","Boolean","window","location","hostname","rootReducer","combineReducers","reducers","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","createBrowserHistory","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.d093bbc9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"FilterSortBarStyles_view__PV0jD\"};","import styled from \"styled-components\";\nimport { NavItem, NavbarText } from \"reactstrap\";\n\nexport const StyledNavItem = styled(NavItem)`\n  transition: all 0.3s ease 0s;\n\n  &:hover {\n    font-size: 18px;\n  }\n`;\n\nexport const StyledNavbarText = styled(NavbarText)`\n  transition: all 0.3s ease 0s;\n\n  &:hover {\n    font-size: 18px;\n  }\n`;\n","const navigation = {\n  left: [\n    {\n      title: \"HomePage\",\n      to: \"/\",\n    },\n    {\n      title: \"Read Books\",\n      to: \"/read-books\",\n    },\n  ],\n  right: [\n    {\n      title: \"+ Add Book\",\n      to: \"/add-book\",\n    },\n  ],\n};\n\nexport default navigation;\n","import React, { useState } from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  NavbarText,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { StyledNavItem, StyledNavbarText } from \"./HeaderStyles\";\nimport navigation from \"../../../constants/navigation\";\n\nconst Header = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div>\n      <Navbar color=\"dark\" dark expand=\"md\">\n        <NavbarBrand tag={Link} to=\"/\">\n          BookShelf App\n        </NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            {navigation.left.map((nav) => {\n              return (\n                <StyledNavItem>\n                  <NavLink tag={Link} to={nav.to}>\n                    {nav.title}\n                  </NavLink>\n                </StyledNavItem>\n              );\n            })}\n          </Nav>\n          {navigation.right.map((nav) => {\n            return (\n              <StyledNavbarText>\n                <NavLink tag={Link} to={nav.to}>\n                  {nav.title}\n                </NavLink>\n              </StyledNavbarText>\n            );\n          })}\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default Header;\n","import Header from \"./Header\";\n\nexport default Header;\n","import React from \"react\";\nimport NavigationBar from \"./NavigationBar/NavigationBar\";\nimport classes from \"./Header.module.css\";\n\nconst Header = () => {\n  return (\n    <div>\n      <NavigationBar />\n    </div>\n  );\n};\n\nexport default Header;\n","export const categories = [\"JavaScript\", \"HTML\", \"CSS\", \"Python\", \"JAVA\"];\nexport const ratings = [1, 2, 3, 4, 5];\nexport const statuses = [\"Not read\", \"Read\"];\nexport const apiHost = \"https://5eb915b2bb17460016b32e61.mockapi.io\";\n","import * as Actions from \"./types\";\n\nconst initialState = {\n  data: [],\n  loading: false,\n  filter: \"\",\n  searchTerm: \"\",\n  searchType: \"\",\n  sortTerm: \"\",\n  view: \"\",\n};\n\nconst booksReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case Actions.ADD_BOOK:\n      return {\n        ...state,\n        data: [...state.data, action.payload],\n      };\n    case Actions.SET_BOOKS:\n      return {\n        ...state,\n        data: action.payload,\n        loading: false,\n      };\n    case Actions.LOAD_BOOKS:\n      return {\n        ...state,\n        loading: true,\n      };\n    case Actions.SET_FILTER:\n      return {\n        ...state,\n        filter: action.payload,\n      };\n    case Actions.UPDATE_BOOK:\n      return {\n        ...state,\n        data: state.data.map((book) => {\n          if (book.id === action.payload.id) {\n            return action.payload;\n          } else {\n            return book;\n          }\n        }),\n      };\n    case Actions.SEARCH_BOOKS:\n      return {\n        ...state,\n        searchTerm: action.payload.searchTerm,\n        searchType: action.payload.searchType,\n      };\n    case Actions.SORT_BOOKS:\n      return {\n        ...state,\n        sortTerm: action.payload,\n      };\n    case Actions.SET_VIEW:\n      return {\n        ...state,\n        view: action.payload,\n      };\n    case Actions.REMOVE_BOOK:\n      return {\n        ...state,\n        data: state.data.filter((book) => {\n          return book.id !== action.payload;\n        }),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default booksReducer;\n","export const filteredBooksSelector = (state) => {\n  let filteredBooks = [];\n\n  // Category filter\n  if (state.filter) {\n    filteredBooks = state.data.filter((book) => {\n      return book.category === state.filter;\n    });\n  } else {\n    filteredBooks = state.data;\n  }\n\n  // Search term filter\n  if (state.searchTerm) {\n    if (state.searchType === \"title\") {\n      filteredBooks = filteredBooks.filter((book) => {\n        // Search by title\n        return (\n          book.title.toLowerCase().indexOf(state.searchTerm.toLowerCase()) > -1\n        );\n      });\n    } else {\n      filteredBooks = filteredBooks.filter((book) => {\n        // Search by author\n        return (\n          book.author.toLowerCase().indexOf(state.searchTerm.toLowerCase()) > -1\n        );\n      });\n    }\n  }\n\n  // Sorting\n  let sortedBooks = [];\n  if (state.sortTerm) {\n    sortedBooks = [...filteredBooks].sort((book1, book2) => {\n      if (state.sortTerm === \"ratingD\") {\n        // Descending order\n        return parseInt(book2[\"rating\"]) - parseInt(book1[\"rating\"]);\n      } else if (state.sortTerm === \"ratingA\") {\n        // Ascending order\n        return parseInt(book1[\"rating\"]) - parseInt(book2[\"rating\"]);\n      } else if (state.sortTerm === \"alphabetical\") {\n        // Alphabetical\n        return book1[\"title\"].split(\" \")[0] > book2[\"title\"].split(\" \")[0]\n          ? 1\n          : -1;\n      }\n    });\n  } else {\n    sortedBooks = filteredBooks;\n  }\n\n  return sortedBooks;\n};\n","import reducer from \"./reducers\";\nimport { filteredBooksSelector } from \"./selectors\";\n\nexport default reducer;\nexport { filteredBooksSelector };\n","export const SET_BOOKS = \"SET_BOOKS\";\nexport const GET_BOOKS = \"GET_BOOKS\";\nexport const ADD_BOOK = \"ADD_BOOK\";\nexport const LOAD_BOOKS = \"LOAD_BOOKS\";\nexport const SET_FILTER = \"SET_FILTER\";\nexport const SEARCH_BOOKS = \"SEARCH_BOOKS\";\nexport const SORT_BOOKS = \"SORT_BOOKS\";\nexport const UPDATE_BOOK = \"UPDATE_BOOK\";\nexport const SET_VIEW = \"SET_VIEW\";\nexport const REMOVE_BOOK = \"REMOVE_BOOK\";\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Books, FilterSortBar, BookList } from \"../../components\";\nimport { getBooks } from \"../../state/ducks/books/actions\";\nimport { Container } from \"reactstrap\";\nimport { filteredBooksSelector } from \"../../state/ducks/books\";\n\nconst Homepage = (props) => {\n  useEffect(() => {\n    props.getBooks();\n  }, []);\n\n  if (props.loading) {\n    return <h1>BOOKS ARE LOADING...</h1>;\n  }\n\n  // FILTERED (or SORTED) books coming from selectFilteredBooks in the reducer\n  let filteredBooks = props.filteredBooks;\n\n  let books = \"\";\n  if (filteredBooks.length < 1) {\n    books = <h2>NO BOOKS HERE</h2>;\n  } else {\n    books = <Books items={filteredBooks} view={props.view} />;\n  }\n\n  // Read Books Route\n  if (props.componentProps.isReadBooks) {\n    let readBooks = filteredBooks.filter((book) => {\n      return book.status === \"Read\";\n    });\n    books = <Books items={readBooks} view={props.view} />;\n  }\n  return (\n    <div>\n      <FilterSortBar />\n      <Container>\n        <div className=\"books-holder\">{books}</div>\n      </Container>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    books: state.books.data,\n    loading: state.books.loading,\n    view: state.books.view,\n    filteredBooks: filteredBooksSelector(state.books),\n  };\n};\n\nconst mapDispatchToProps = {\n  getBooks,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Homepage);\n","import * as Actions from \"./types\";\nimport axios from \"axios\";\nimport { apiHost } from \"../../../constants/constants\";\n\nexport const addBook = (values, history) => {\n  return (dispatch) => {\n    axios\n      .post(`${apiHost}/books`, values)\n      .then((result) => {\n        dispatch({ type: Actions.ADD_BOOK, payload: result.data });\n        history.push(\"/\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\n\nexport const getBooks = () => {\n  return (dispatch) => {\n    dispatch({ type: Actions.LOAD_BOOKS });\n    axios\n      .get(`${apiHost}/books`)\n      .then((result) => {\n        dispatch({ type: Actions.SET_BOOKS, payload: result.data });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\n\nexport const setFilter = (filter) => {\n  return (dispatch) => {\n    dispatch({ type: Actions.SET_FILTER, payload: filter });\n  };\n};\n\nexport const searchBooks = (searchValues) => {\n  return (dispatch) => {\n    dispatch({ type: Actions.SEARCH_BOOKS, payload: searchValues });\n  };\n};\n\nexport const sortBooks = (sortTerm) => {\n  return (dispatch) => {\n    dispatch({ type: Actions.SORT_BOOKS, payload: sortTerm });\n  };\n};\n\nexport const updateBook = (id, values, history) => {\n  return (dispatch) => {\n    axios\n      .put(`${apiHost}/books/${id}`, {\n        ...values,\n      })\n      .then((result) => {\n        dispatch({\n          type: Actions.UPDATE_BOOK,\n          payload: result.data,\n        });\n        history.push(\"/\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\n\nexport const setViewOption = (view) => {\n  return {\n    type: Actions.SET_VIEW,\n    payload: view,\n  };\n};\n\nexport const removeBook = (id, history) => {\n  return (dispatch) => {\n    axios.delete(`${apiHost}/books/${id}`).then(() => {\n      dispatch({\n        type: Actions.REMOVE_BOOK,\n        payload: id,\n      });\n      history.push(\"/\");\n    });\n  };\n};\n","import Homepage from \"./Homepage\";\n\nexport default Homepage;\n","import React, { useState, useEffect } from \"react\";\nimport { AddBookForm } from \"../../components\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport axios from \"axios\";\nimport { apiHost } from \"../../constants/constants\";\n\nconst AddBook = (props) => {\n  const [book, setBook] = useState(\"\");\n\n  useEffect(() => {\n    const id = props.routerProps.match.params.id;\n    if (id) {\n      axios.get(`${apiHost}/books/${id}`).then((result) => {\n        setBook(result.data);\n      });\n    }\n  }, []);\n\n  const isEdit = props.componentProps.isEdit;\n  const id = props.routerProps.match.params.id;\n  return (\n    <Container>\n      <Row>\n        <Col xs={12}>\n          {isEdit ? <h3>Edit book</h3> : <h3>Add a new book</h3>}\n        </Col>\n        <Col xs={12}>\n          <AddBookForm isEdit={isEdit} book={book} />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default AddBook;\n","import React from \"react\";\nimport { Homepage, AddBook } from \"../containers\";\n\nconst routes = [\n  {\n    title: \"Home Page\",\n    path: \"/\",\n    exact: true,\n    componentProps: {},\n    component: Homepage,\n  },\n  {\n    title: \"Add Book\",\n    path: \"/add-book\",\n    exact: false,\n    componentProps: {},\n    component: AddBook,\n  },\n  {\n    title: \"Edit Book\",\n    path: \"/edit-book/:id\",\n    exact: false,\n    componentProps: {\n      isEdit: true,\n    },\n    component: AddBook,\n  },\n  {\n    title: \"Read Books\",\n    path: \"/read-books\",\n    exact: false,\n    componentProps: {\n      isReadBooks: true,\n    },\n    component: Homepage,\n  },\n];\n\nexport default routes;\n","import AddBook from \"./AddBook\";\nexport default AddBook;\n","import Main from \"./Main\";\nexport default Main;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport routes from \"../../constants/routes\";\nimport { MainLayout } from \"../../components\";\n\nconst Main = () => {\n  return (\n    <div>\n      <Switch>\n        {routes.map((route) => {\n          return (\n            <Route\n              path={route.path}\n              exact={route.exact}\n              component={(props) => {\n                const Comp = route.component;\n                return (\n                  <MainLayout\n                    title={route.title}\n                    routerProps={props}\n                    componentProps={route.componentProps}\n                  >\n                    {Comp}\n                  </MainLayout>\n                );\n              }}\n            />\n          );\n        })}\n      </Switch>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Formik } from \"formik\";\nimport {\n  Row,\n  Col,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormText,\n  FormFeedback,\n} from \"reactstrap\";\nimport { categories, ratings, statuses } from \"../../constants/constants\";\nimport {\n  addBook,\n  updateBook,\n  removeBook,\n} from \"../../state/ducks/books/actions\";\nimport * as Yup from \"yup\";\nimport { withRouter } from \"react-router\";\nimport classes from \"./AddBookForm.module.css\";\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required(\"Title is a required field\"),\n  author: Yup.string().required(\"Author is a required field\"),\n  review: Yup.string().min(30, \"Please enter minimum 30 characters.\"),\n  imageUrl: Yup.string().url(), // formfeedback göster\n});\n\nconst AddBookForm = (props) => {\n  let initialValues = {\n    title: \"\",\n    author: \"\",\n    category: \"\",\n    description: \"\",\n    rating: \"\",\n    review: \"\",\n    imageUrl: \"\",\n    link: \"\",\n    status: \"\",\n  };\n  if (props.isEdit && props.book) {\n    // review var mi - Object.keys().indexOf(\"review\") > - 1\n    initialValues = { ...props.book };\n  }\n  return (\n    <div>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(values) => {\n          console.log(values);\n          if (props.isEdit) {\n            props.updateBook(props.book.id, values, props.history);\n          } else {\n            props.addBook(values, props.history);\n          }\n        }}\n        enableReinitialize={true}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          /* and other goodies */\n        }) => (\n          <Form onSubmit={handleSubmit}>\n            <Row>\n              <Col xs={6}>\n                <FormGroup>\n                  <Label for=\"title\">Title</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"title\"\n                    id=\"title\"\n                    placeholder=\"Name of the book\"\n                    value={values.title}\n                    onChange={handleChange}\n                    invalid={errors.title}\n                  />\n                  {errors.title && <FormFeedback>{errors.title}</FormFeedback>}\n                </FormGroup>\n              </Col>\n              <Col xs={6}>\n                <FormGroup>\n                  <Label for=\"author\">Author</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"author\"\n                    id=\"author\"\n                    placeholder=\"Author of the book\"\n                    value={values.author}\n                    onChange={handleChange}\n                    invalid={errors.author}\n                  />\n                  {errors.author && (\n                    <FormFeedback>{errors.author}</FormFeedback>\n                  )}\n                </FormGroup>\n              </Col>\n            </Row>\n            <FormGroup>\n              <Label for=\"link\">Goodreads URL</Label>\n              <Input\n                type=\"text\"\n                name=\"link\"\n                id=\"link\"\n                placeholder=\"Goodreads link of the book\"\n                value={values.link}\n                onChange={handleChange}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"imageUrl\">Image URL</Label>\n              <Input\n                type=\"text\"\n                name=\"imageUrl\"\n                id=\"imageUrl\"\n                placeholder=\"Image of the book\"\n                value={values.imageUrl}\n                onChange={handleChange}\n              />\n            </FormGroup>\n            <Row>\n              <Col xs={4}>\n                <FormGroup>\n                  <Label for=\"exampleSelect\">Category</Label>\n                  <Input\n                    type=\"select\"\n                    name=\"category\"\n                    id=\"category\"\n                    value={values.category}\n                    onChange={handleChange}\n                  >\n                    {categories.map((category) => {\n                      return <option>{category}</option>;\n                    })}\n                  </Input>\n                </FormGroup>\n              </Col>\n              <Col xs={4}>\n                <FormGroup>\n                  <Label for=\"rating\">Rating</Label>\n                  <Input\n                    type=\"select\"\n                    name=\"rating\"\n                    id=\"rating\"\n                    value={values.rating}\n                    onChange={handleChange}\n                  >\n                    {ratings.map((score) => {\n                      return <option>{score}</option>;\n                    })}\n                  </Input>\n                </FormGroup>\n              </Col>\n              <Col xs={4}>\n                <FormGroup>\n                  <Label for=\"exampleSelect\">Status</Label>\n                  <Input\n                    type=\"select\"\n                    name=\"status\"\n                    id=\"status\"\n                    value={values.status}\n                    onChange={handleChange}\n                  >\n                    {statuses.map((status) => {\n                      return <option>{status}</option>;\n                    })}\n                  </Input>\n                </FormGroup>\n              </Col>\n            </Row>\n            <FormGroup>\n              <Label for=\"exampleText\">Description</Label>\n              <Input\n                type=\"textarea\"\n                name=\"description\"\n                id=\"description\"\n                value={values.description}\n                onChange={handleChange}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <Label for=\"review\">Review</Label>\n              <Input\n                type=\"textarea\"\n                name=\"review\"\n                id=\"review\"\n                value={values.review}\n                onChange={handleChange}\n                invalid={errors.review}\n              />\n              <FormFeedback>{errors.review}</FormFeedback>\n              <FormText>Review should be minimum 30 characters.</FormText>\n            </FormGroup>\n\n            {props.isEdit ? (\n              <Row>\n                <Col xs={{ size: 2, offset: 4 }}>\n                  <Button className={classes.button} color=\"primary\">\n                    Save\n                  </Button>\n                </Col>\n                <Col xs={{ size: 2 }}>\n                  <Button\n                    type=\"button\"\n                    className={classes.button}\n                    color=\"danger\"\n                    onClick={() => {\n                      props.removeBook(props.book.id, props.history);\n                    }}\n                  >\n                    Delete\n                  </Button>\n                </Col>\n              </Row>\n            ) : (\n              <Button className={classes.button} color=\"primary\">\n                Add\n              </Button>\n            )}\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  addBook,\n  updateBook,\n  removeBook,\n};\n\nexport default withRouter(connect(null, mapDispatchToProps)(AddBookForm));\n","import AddBookForm from \"./AddBookForm\";\n\nexport default AddBookForm;\n","import MainLayout from \"./MainLayout\";\n\nexport default MainLayout;\n","import React, { Component } from \"react\";\nimport { Container } from \"reactstrap\";\n\nclass MainLayout extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const title = this.props.title;\n    document.title = title;\n  }\n\n  render() {\n    const Children = this.props.children;\n    return (\n      <div>\n        <Children\n          routerProps={this.props.routerProps}\n          componentProps={this.props.componentProps}\n        />\n      </div>\n    );\n  }\n}\n\nexport default MainLayout;\n","import styled from \"styled-components\";\nimport { NavbarText, InputGroup, ButtonDropdown, Container } from \"reactstrap\";\n\nexport const StyledNavbarText = styled(NavbarText)`\n  margin-left: 15px;\n  color: ${(props) => (props.active ? \"#FF8247\" : \"#035491\")};\n  cursor: pointer;\n`;\n\nexport const StyledInputGroup = styled(InputGroup)`\n  display: inline-flex;\n  width: 60%;\n\n  &.sort {\n    width: 30%;\n    align-self: flex-end;\n  }\n`;\n\nexport const StyledButtonDropdown = styled(ButtonDropdown)`\n  width: 10%;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Nav,\n  Container,\n  Row,\n  Col,\n  InputGroup,\n  InputGroupText,\n  InputGroupAddon,\n  InputGroupButtonDropdown,\n  Input,\n  Button,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  ButtonDropdown,\n} from \"reactstrap\";\n\nimport { connect } from \"react-redux\";\nimport {\n  StyledNavbarText,\n  StyledInputGroup,\n  StyledButtonDropdown,\n  StyledContainer,\n} from \"./FilterSortBarStyles\";\nimport { categories } from \"../../constants/constants\";\nimport {\n  setFilter,\n  searchBooks,\n  sortBooks,\n  setViewOption,\n} from \"../../state/ducks/books/actions\";\nimport classes from \"./FilterSortBarStyles.module.css\";\n\nconst FilterSortBar = (props) => {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const toggleDropDown = () => setDropdownOpen(!dropdownOpen);\n  const [dropdownOpen2, setOpen] = useState(false);\n  const toggle = () => setOpen(!dropdownOpen2);\n\n  const views = {\n    list: \"fas fa-list fa-2x\",\n    grid: \"fas fa-th-large fa-2x\",\n  };\n\n  let [selectedView, setSelectedView] = useState(views[\"list\"]);\n\n  const [searchValues, setSearchValues] = useState({\n    searchType: \"title\",\n    searchTerm: \"\",\n  });\n\n  const [view, setView] = useState(\"list\");\n\n  useEffect(() => {\n    props.search(searchValues);\n  }, [searchValues]);\n\n  useEffect(() => {\n    props.setViewOption(view);\n  }, [view]);\n\n  // Show the opposite icon of the current view\n  useEffect(() => {\n    setView(selectedView === \"fas fa-list fa-2x\" ? \"Grid\" : \"List\");\n  }, [selectedView]);\n\n  return (\n    <div>\n      <Container fluid className=\"bg-white\" style={{ padding: \"15px\" }}>\n        <Row>\n          <Col xs={6}>\n            <Nav className=\"bg-white\">\n              <StyledNavbarText>\n                <strong>Categories:</strong>\n              </StyledNavbarText>\n              <StyledNavbarText\n                active={!props.activeFilter}\n                onClick={() => {\n                  props.changeFilter(\"\");\n                }}\n              >\n                All\n              </StyledNavbarText>\n              {categories.map((category) => {\n                return (\n                  <StyledNavbarText\n                    active={props.activeFilter === category}\n                    onClick={() => {\n                      props.changeFilter(category);\n                    }}\n                  >\n                    {category}\n                  </StyledNavbarText>\n                );\n              })}\n            </Nav>\n          </Col>\n\n          <Col xs={6}>\n            <StyledInputGroup>\n              <InputGroupButtonDropdown\n                addonType=\"append\"\n                isOpen={dropdownOpen}\n                toggle={toggleDropDown}\n              >\n                <DropdownToggle caret>\n                  Search by {searchValues.searchType}\n                </DropdownToggle>\n                <DropdownMenu>\n                  <DropdownItem\n                    value=\"title\"\n                    onClick={(e) => {\n                      setSearchValues({\n                        ...searchValues,\n                        searchType: e.target.value,\n                      });\n                    }}\n                  >\n                    Title\n                  </DropdownItem>\n                  <DropdownItem divider />\n                  <DropdownItem\n                    value=\"author\"\n                    onClick={(e) => {\n                      setSearchValues({\n                        ...searchValues,\n                        searchType: e.target.value,\n                      });\n                    }}\n                  >\n                    Author\n                  </DropdownItem>\n                </DropdownMenu>\n              </InputGroupButtonDropdown>\n              <Input\n                onChange={(e) => {\n                  setSearchValues({\n                    ...searchValues,\n                    searchTerm: e.target.value,\n                  });\n                }}\n              />\n            </StyledInputGroup>\n\n            <StyledInputGroup className=\"sort\">\n              <Input\n                type=\"select\"\n                name=\"select\"\n                id=\"exampleSelect\"\n                onChange={(e) => {\n                  props.sort(e.target.value);\n                }}\n              >\n                <option value=\"\">No Sort</option>\n                <option value=\"alphabetical\">Alphabetical</option>\n                <option value=\"ratingA\">Rating (Ascending)</option>\n                <option value=\"ratingD\">Rating (Descending)</option>\n              </Input>\n            </StyledInputGroup>\n            <a\n              className={classes.view}\n              onClick={() => {\n                setSelectedView(\n                  selectedView === views[\"grid\"] ? views[\"list\"] : views[\"grid\"]\n                );\n              }}\n            >\n              <i className={selectedView}></i>\n            </a>\n\n            {/* {DrowDown for changing view} */}\n            {/* <StyledButtonDropdown isOpen={dropdownOpen2} toggle={toggle}>\n              <DropdownToggle caret size=\"sm\">\n                {view} View\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem\n                  value=\"Grid\"\n                  onClick={(e) => {\n                    setView(e.target.value);\n                  }}\n                >\n                  Grid\n                </DropdownItem>\n                <DropdownItem\n                  value=\"List\"\n                  onClick={(e) => {\n                    setView(e.target.value);\n                  }}\n                >\n                  List\n                </DropdownItem>\n              </DropdownMenu>\n            </StyledButtonDropdown> */}\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    activeFilter: state.books.filter,\n  };\n};\n\nconst mapDispatchToProps = {\n  changeFilter: setFilter,\n  search: searchBooks,\n  sort: sortBooks,\n  setViewOption,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterSortBar);\n","import styled from \"styled-components\";\nimport { Card, CardText } from \"reactstrap\";\n\nexport const StyledBookCard = styled(Card)`\n  height: 500px;\n  border-radius: 8px;\n  box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.5);\n  margin-bottom: 40px;\n  .card-img-top {\n    border-top-left-radius: 8px;\n    border-top-right-radius: 8px;\n    height: 250px;\n  }\n`;\n\nexport const StyledCardText = styled(CardText)`\n  strong {\n    color: rgb(255, 7, 110);\n  }\n`;\n","import React, { useState } from \"react\";\nimport {\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  CardTitle,\n  CardSubtitle,\n  CardLink,\n  Button,\n  Popover,\n  PopoverHeader,\n  PopoverBody,\n} from \"reactstrap\";\nimport { StyledBookCard, StyledCardText } from \"./BookStyles\";\nimport { Link } from \"react-router-dom\";\n\nconst Book = (props) => {\n  const [popoverOpen, setPopoverOpen] = useState(false);\n\n  const toggle = () => setPopoverOpen(!popoverOpen);\n\n  const { imageUrl, rating, title, id, review } = props;\n  return (\n    <StyledBookCard>\n      <CardImg top width=\"100%\" src={imageUrl} alt={title} />\n      <CardBody>\n        <StyledCardText>\n          <strong>{`${rating} / 5`}</strong>\n        </StyledCardText>\n        <CardText>{title}</CardText>\n        <Button id={`popover${id}`} type=\"button\">\n          Review\n        </Button>\n        <Popover\n          placement=\"bottom\"\n          isOpen={popoverOpen}\n          target={`popover${id}`}\n          toggle={toggle}\n        >\n          <PopoverBody>\n            {review ? review : \"No review for this book\"}\n          </PopoverBody>\n        </Popover>\n        <br />\n        <CardLink>Details</CardLink>\n        <CardLink>\n          <Link to={`/edit-book/${id}`}>Edit Book</Link>\n        </CardLink>\n        <br />\n        {props.link && (\n          <CardLink>\n            <a href={props.link} target=\"_blank\">\n              Learn More!\n            </a>\n          </CardLink>\n        )}\n      </CardBody>\n    </StyledBookCard>\n  );\n};\n\nexport default Book;\n","import React from \"react\";\nimport Book from \"./Book\";\nimport { Col, Row } from \"reactstrap\";\n\nconst Books = (props) => {\n  return (\n    <Row>\n      {props.items.map((item) => {\n        return (\n          <Col xs={props.view === \"List\" ? { size: 4, offset: 4 } : 3}>\n            <Book {...item} />\n          </Col>\n        );\n      })}\n    </Row>\n  );\n};\n\nexport default Books;\n","import React from \"react\";\nimport { Header, Main } from \"./components\";\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as reducers from \"./ducks\";\nimport { combineReducers, createStore, compose, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\n\nconst rootReducer = combineReducers(reducers);\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancer(applyMiddleware(thunkMiddleware))\n);\n\nexport default store;\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./state/store\";\nimport history from \"./constants/history\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router history={history}>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"AddBookForm_button__TdcP-\"};"],"sourceRoot":""}